■開発の手順
　1. 開発する課題に対応するブランチを切る (issue#1など)
　　 このブランチはpublishしなければローカルリポジトリのみに保持できるので、
　　 リモートリポジトリにブランチが大量にできてしまうことは防げる。

　2. そのブランチ内で編集してcommit,publishを行う

　3. 完了したらmasterブランチにmergeする

※いきなりmasterにcommitはしないらしい

■開発途中で別の課題に取り組む時
　1. 現在のブランチは未マージの状態のままにして、masterブランチに切り替える。
　　 この時、未コミットなソースが残っていると不整合を起こす？のでコミットしておく

　2. 新しい課題に対応するブランチを切る

■ブランチの扱いについて
　・ブランチを切ってもローカルでディレクトリが別れてファイルが複製されるわけではない
　　(見えないところで管理されている)

　・クライアントでブランチを切り替えると、
　　ローカルリポジトリの中のファイルが切り替えたブランチのファイルに入れ替わる。

　・ブランチを切り替える時、リポジトリ内のファイルをテキストエディタ等で開いて
　　ロックを取得したままでブランチを切り替えるとそのファイルだけ切り替えられず、
　　別ブランチのファイルをそのまま持ってきてしまうので注意する。

　・サクラエディタは開いたファイルをロックしてしまうので相性が悪い。
　　SublimeTextはファイルをロックせず、ブランチを切り替えるとエディタ側にも自動で反映されるので相性が良い。